name: bryce Deploy Thingy
on: [push]
jobs:
  DeployingPipeline:
    runs-on: brycelabel
    steps:
      - name: "clean things up"
        run: |
          pwd
          cd ./ticketsrus-aaron-bryce-carlos/BryceDocker
          docker compose down -v
          cd ../../
          rm -rf ./ticketsrus-aaron-bryce-carlos

      - name: "clone project"
        run: git clone --branch separateBranch https://${{secrets.BRYCE_GITHUB_PAT}}@github.com/SnowSE/ticketsrus-aaron-bryce-carlos.git

      - name: "run the build command"
        run: |
            # cd ./ticketsrus-aaron-bryce-carlos/BryceDocker
            # docker compose up --build -d

          
      - name: "Push thingy"
        run: | 
          cd ./ticketsrus-aaron-bryce-carlos/
          ls -la
          docker build -t 144.17.92.12:5000/bryce2/blazor-web:1 .
          docker push 144.17.92.12:5000/bryce2/blazor-web:1
          # kubectl -n bryce2 create configmap blazor-web-postgres-init --from-file=./TestTicket/20240215.01.21.01.sql

          cd kube-configs
            kubectl -n bryce2 delete configmap otel-config || true
            kubectl -n bryce2 create configmap otel-config --from-file=./../BryceDocker/otel/otel.yml
          cd ..

          # kubectl -n bryce2 create configmap blazor-web-postgres-init --from-file=TestTicket/20240215.01.21.01.sql
          kubectl apply -f kube/


      # - name: "Integration Tests"
      #   run: |
      #     cd ./ticketsrus-aaron-bryce-carlos/TestTicket
      #     dotnet test 

      # - name: "Unit Test"
      #   run: |
      #     cd ./ticketsrus-aaron-bryce-carlos/UnitTest
      #     dotnet test 

      # - name: "linting"
      #   run: |
      #     cd ./ticketsrus-aaron-bryce-carlos
      #     dotnet format --verify-no-changes

      # - name: "Teams Notification"
      #   uses: skitionek/notify-microsoft-teams@master
      #   if: always()
      #   with:
      #     webhook_url: ${{ secrets.BryceWebHook }}
      #     needs: ${{ toJson(needs) }}
      #     job: ${{ toJson(job) }}
      #     steps: ${{ toJson(steps) }}
    
    